---
import { getEntries, type CollectionEntry } from 'astro:content';
import TagPill from './TagPill.astro';
import { Image } from 'astro:assets';

interface Props {
	href: string;
	project: CollectionEntry<'projects'>;
}

// const pathname = new URL(Astro.request.url).pathname

const { href, project } = Astro.props;

const tags: CollectionEntry<'tags'>[] = await getEntries(project.data.tags); // Resolve an array of references
---

<a href={href} class="project-card">
	<!-- {pathname.includes(href) ? <Image src={project.data.staticImage} alt={`${project.data.title} demo image`}/> : <img alt="yoo"/>} -->
	<Image src={project.data.staticImage} alt={`${project.data.title} demo image`} height={200}/>

	<div class="project-card-details no-opacity">
		<header>
			<h3>{project.data.title}</h3>
			<!-- <ul>
				{tags.map(tag => (
					<li>
						<TagPill tag={tag} />
					</li>
				))}
			</ul> -->
			
			<p>{project.data.description}</p>
		</header>
		
		<p>{project.data.year}</p>
	</div>
</a>

<style>
	.project-card {
		flex-shrink: 0;
		display: flex;
		flex-direction: column;
	}
	.project-card-details {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}
	.project-card-details ul {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		padding: 0;
		margin-bottom: 1rem;
	}
	.project-card-details li {
		list-style: none;
	}
	.no-opacity {
		opacity: 0;
	}
	.project-card:hover .no-opacity {
		opacity: 1;
	}
	/* .project-card img:is(:hover, :focus-within) {
		filter: none;
	} */
</style>
