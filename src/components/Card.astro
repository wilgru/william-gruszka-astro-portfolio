---

import { getEntries, type CollectionEntry } from 'astro:content';
import TagPill from './TagPill.astro';

interface Props {
	href: string;
	project: CollectionEntry<'projects'>;
}

const { href, project } = Astro.props;

// Resolve an array of references
const tags: CollectionEntry<'tags'>[] = await getEntries(project.data.tags);
---

<a href={href} class="project-card">
	<img src="STATIC">

	<div class="project-card-details no-opacity">
		<header>
			<h3>{project.data.title}</h3>
			<ul>
				{tags.map(tag => (
					<li>
						<TagPill tag={tag} />
					</li>
				))}
			</ul>
			
			<p>{project.data.description}</p>
		</header>

		<p>{project.data.year}</p>
	</div>
</a>

<script>
  const projectCards = document.querySelectorAll('a.project-card');

	projectCards.forEach(projectCard => {
		if (window.location.href.includes(projectCard.attributes.href.value)) { 
			projectCard.children[0].attributes.src.value = "GIF"
			return
		}

		projectCard.addEventListener("mouseover", () => {
			projectCard.children[0].attributes.src.value = "GIF"
			projectCard.children[1].classList.remove('no-opacity')
		});

		projectCard.addEventListener('mouseleave', () => {
			projectCard.children[0].attributes.src.value = "STATIC"
			projectCard.children[1].classList.add('no-opacity')
		});
	})
</script>

<style>
	.project-card {
		flex-shrink: 0;
		display: flex;
		gap: 1rem;
		padding: 1px;
	}
	.project-card img {
		display: flex;
		padding: 1px;
		background-color: #2f2f2f;
		filter: grayscale();
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		width: 25rem;
		height: 15rem;
	}
	.project-card-details {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		width: 10rem;
	}
	.project-card-details ul {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		padding: 0;
		margin-bottom: 1rem;
	}
	.project-card-details li {
		list-style: none;
	}
	.no-opacity {
		opacity: 0;
	}
	/* .project-card img:is(:hover, :focus-within) {
		filter: none;
	} */
</style>
